#!/bin/bash

curr_dir="."
if [ ! -z "$1" ]; then
	curr_dir=$1
fi

mkdir -p "./single_audio"

'
General rule: quote it if it can either be empty or contain spaces 
(or any whitespace really) or special characters (wildcards). 
Not quoting strings with spaces often leads to the shell breaking 
apart a single argument into many.
'

find -E "${curr_dir}" -regex ".*\.(avi|mov|mkv|mp4)" | while read file; do
	if [ -f "$file" ]; then 
		currFile=$(basename "${file}")
		echo "converting ${file}------------------------------------------------------------"

		# need dev null to avoid skipping files # https://stackoverflow.com/questions/23084551/ffmpeg-script-skips-files
		# removes all streams except third (1st audio?)
		ffmpeg -i "$file" -map 0:0 -map 0:2 -c copy "${curr_dir}/single_audio/${currFile}" < /dev/null
		
		# only remove first audio
		# ffmpeg -i input -map 0 -map -0:a:0 -c copy output

		# overwrites
		# ffmpeg -y -i "$file" -map 0:0 -map 0:2 -c copy "${curr_dir}/../single_audio/${currFile}" < /dev/null
		# ffmpeg -y -i "$file" -map 0:0 -map 0:2 -c copy "${curr_dir}/${currFile}" < /dev/null  # cannot edit in-place


		echo '------------------------------------------------------------end'
		echo '------------------------------------------------------------end'
		echo '------------------------------------------------------------end'
	fi
done













